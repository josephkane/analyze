// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IntegrationInfo IntegrationInfo contains all info needed to reach prometheus instance inside k8s cluster
// swagger:model integrationInfo
type IntegrationInfo struct {

	// name of service which is integrated, e. g. Prometheus
	IntegrationName string `json:"integrationName,omitempty"`

	// shows whether service is reachable
	// Enum: [REACHABLE UNREACHABLE]
	ReachabilityStatus string `json:"reachabilityStatus,omitempty"`

	// name of k8s service which resides in front of app which is integrated
	ServiceName string `json:"serviceName,omitempty"`

	// name of k8s namespace where app and its service is deployed
	ServiceNamespace string `json:"serviceNamespace,omitempty"`

	// port of k8s service which resides in front of app which is integrated
	ServicePort string `json:"servicePort,omitempty"`
}

// Validate validates this integration info
func (m *IntegrationInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateReachabilityStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var integrationInfoTypeReachabilityStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["REACHABLE","UNREACHABLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		integrationInfoTypeReachabilityStatusPropEnum = append(integrationInfoTypeReachabilityStatusPropEnum, v)
	}
}

const (

	// IntegrationInfoReachabilityStatusREACHABLE captures enum value "REACHABLE"
	IntegrationInfoReachabilityStatusREACHABLE string = "REACHABLE"

	// IntegrationInfoReachabilityStatusUNREACHABLE captures enum value "UNREACHABLE"
	IntegrationInfoReachabilityStatusUNREACHABLE string = "UNREACHABLE"
)

// prop value enum
func (m *IntegrationInfo) validateReachabilityStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, integrationInfoTypeReachabilityStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *IntegrationInfo) validateReachabilityStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.ReachabilityStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateReachabilityStatusEnum("reachabilityStatus", "body", m.ReachabilityStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IntegrationInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IntegrationInfo) UnmarshalBinary(b []byte) error {
	var res IntegrationInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
