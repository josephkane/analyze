// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"./pkg/models"
)

// GetPromethiusIntegrationInfoOKCode is the HTTP code returned for type GetPromethiusIntegrationInfoOK
const GetPromethiusIntegrationInfoOKCode int = 200

/*GetPromethiusIntegrationInfoOK no error

swagger:response getPromethiusIntegrationInfoOK
*/
type GetPromethiusIntegrationInfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.IntegrationInfo `json:"body,omitempty"`
}

// NewGetPromethiusIntegrationInfoOK creates GetPromethiusIntegrationInfoOK with default headers values
func NewGetPromethiusIntegrationInfoOK() *GetPromethiusIntegrationInfoOK {

	return &GetPromethiusIntegrationInfoOK{}
}

// WithPayload adds the payload to the get promethius integration info o k response
func (o *GetPromethiusIntegrationInfoOK) WithPayload(payload *models.IntegrationInfo) *GetPromethiusIntegrationInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get promethius integration info o k response
func (o *GetPromethiusIntegrationInfoOK) SetPayload(payload *models.IntegrationInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPromethiusIntegrationInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetPromethiusIntegrationInfoDefault error

swagger:response getPromethiusIntegrationInfoDefault
*/
type GetPromethiusIntegrationInfoDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPromethiusIntegrationInfoDefault creates GetPromethiusIntegrationInfoDefault with default headers values
func NewGetPromethiusIntegrationInfoDefault(code int) *GetPromethiusIntegrationInfoDefault {
	if code <= 0 {
		code = 500
	}

	return &GetPromethiusIntegrationInfoDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get promethius integration info default response
func (o *GetPromethiusIntegrationInfoDefault) WithStatusCode(code int) *GetPromethiusIntegrationInfoDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get promethius integration info default response
func (o *GetPromethiusIntegrationInfoDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get promethius integration info default response
func (o *GetPromethiusIntegrationInfoDefault) WithPayload(payload *models.Error) *GetPromethiusIntegrationInfoDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get promethius integration info default response
func (o *GetPromethiusIntegrationInfoDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPromethiusIntegrationInfoDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
